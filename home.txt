    <?php
    include 'backend/init.php';

    // ✅ Secure username fetch
    $user_id = $_SESSION['user_id'];
    $stmt = $conn->prepare("SELECT username FROM users WHERE id = ?");
    $stmt->bind_param("i", $user_id);
    $stmt->execute();
    $result = $stmt->get_result();
    $user = $result->fetch_assoc();
    $username = $user['username'];
    ?>
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>🌸 BloomLux Dashboard 🌸</title>
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="css/home.css">
    </head>
    <body>
        <!-- Sidebar -->
        <div class="sidebar">
            <h2>🌸 BloomLux Dashboard 🌸</h2>
            <a href="supply.php">📦 Supply</a>
            <a href="production.php">🧁 Production</a>
            <a href="inventory.php">📊 Inventory</a>
            <a href="logout.php">🚪 Logout</a>
        </div>
        <!-- Main -->
        <div class="main">
            <div class="top-bar">
                <div class="welcome">👋 Welcome, <?php echo htmlspecialchars($username); ?>!</div>
                <div class="top-right">
                    <div id="live-time">⏰ Loading time...</div>
                    <div class="search-bar"><input type="text" placeholder="Search..."></div>
                    <div class="notif" id="notif-icon">
                        🔔
                        <span id="notif-badge" style="background:red;color:white;font-size:0.75rem;border-radius:50%;padding:2px 6px;position:absolute;top:-5px;right:-5px;display:none;">0</span>
                    </div>
                    <div id="notif-dropdown" style="display:none;position:absolute;right:35px;top:50px;width:300px;max-height:400px;overflow-y:auto;background:#fff;border-radius:10px;box-shadow:0 4px 12px rgba(0,0,0,0.2);z-index:100;">
                        <ul id="notif-feed" style="list-style:none;padding:10px;margin:0;"></ul>
                    </div>
                </div>
            </div>

            <div class="dashboard">
                <div>
                    <div class="stats">
                        <div class="stat-box">
                            <h3>520</h3>
                            <p>Materials in Stock</p>
                        </div>
                        <div class="stat-box">
                            <h3>150</h3>
                            <p>In Production</p>
                        </div>
                        <div class="stat-box">
                            <h3>95</h3>
                            <p>Completed Orders</p>
                        </div>
                    </div>

                    <div class="card">
                        <h3>📈 Inventory Trends</h3>
                        <img src="https://via.placeholder.com/600x200?text=Flower+Stock+Graph" alt="Stock Trends" style="width:100%; border-radius:10px;">
                    </div>
                </div>

                <div>
                    <div class="card notifications">
                        <h3>🔔 Notifications</h3>
                        <div class="notif-scroll">
                            <ul id="notifications-list"></ul>
                        </div>
                    </div>

                    <div class="card">
                        <h3>💰 Sales Trends</h3>
                        <img src="https://via.placeholder.com/300x120?text=Sales+Graph" alt="Sales Trends" style="width:100%; border-radius:10px;">
                    </div>
                    <div id="production-schedule-container">
                        <div id="production-schedule-header">
                            <h3>🗓 Production Schedule</h3>
                            <button id="viewProductionBtn">Check Here</button>
                        </div>
                        <ul id="production-schedule-list"></ul>
                    </div>
                </div>
            </div>
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const notifList = document.querySelector('#notifications-list');
                const scheduleList = document.querySelector('#production-schedule-list');
                const notifFeed = document.querySelector('#notif-feed');
                const notifBadge = document.querySelector('#notif-badge');
                const notifDropdown = document.querySelector('#notif-dropdown');
                const notifIcon = document.querySelector('#notif-icon');

                // Load read notifications from localStorage
                let readNotifications = JSON.parse(localStorage.getItem('readNotifications') || '[]');

                // ⏰ Live Time
                function updateTime() {
                    const now = new Date();
                    const options = {
                        hour: '2-digit',
                        minute: '2-digit',
                        second: '2-digit',
                        weekday: 'short',
                        month: 'short',
                        day: 'numeric'
                    };
                    document.getElementById("live-time").innerHTML = "⏰ " + now.toLocaleString('en-US', options);
                }
                setInterval(updateTime, 1000);
                updateTime();

                // Bell click: toggle dropdown and mark notifications as read
                notifIcon.addEventListener('click', () => {
                    const isVisible = notifDropdown.style.display === 'block';
                    notifDropdown.style.display = isVisible ? 'none' : 'block';

                    if (!isVisible) {
                        const visibleNotifs = Array.from(notifFeed.querySelectorAll('li.new-notif'));
                        visibleNotifs.forEach(li => li.classList.remove('new-notif'));

                        readNotifications = Array.from(new Set([
                            ...readNotifications,
                            ...visibleNotifs.map(li => li.textContent)
                        ]));
                        localStorage.setItem('readNotifications', JSON.stringify(readNotifications));

                        // Only hide badge when user clicks
                        notifBadge.style.display = 'none';
                    }
                });
                async function updateNotifications() {
                    try {
                        let totalUnread = 0;

                        // --- Fetch low stock ---
                        const stockRes = await fetch('get_stock.php');
                        if (!stockRes.ok) throw new Error('Failed stock fetch');
                        const stockData = await stockRes.json();
                        const lowStockItems = Object.values(stockData.items || []).filter(i => i.quantity <= i.threshold);

                        // --- Fetch production batches ---
                        const prodRes = await fetch('get_production.php');
                        if (!prodRes.ok) throw new Error('Failed prod fetch');
                        const prodData = await prodRes.json();
                        const dashboardBatches = prodData.filter(batch => !batch.status.toLowerCase().includes('completed'));

                        // --- Update low stock list on sidebar (no duplicates) ---
                        const existingNotifTextsSidebar = new Set(Array.from(notifList.querySelectorAll('li')).map(li => li.textContent));
                        const seenStocks = new Set();
                        lowStockItems.forEach(item => {
                            const text = `⚠️ ${item.name} stock is low! (Available: ${item.quantity})`;
                            if (!existingNotifTextsSidebar.has(text) && !seenStocks.has(item.name)) {
                                seenStocks.add(item.name);
                                const li = document.createElement('li');
                                li.textContent = text;
                                li.classList.add('low-stock');
                                notifList.appendChild(li);
                                setTimeout(() => li.classList.add('show'), 50);
                            }
                        });

                        // --- Update production schedule (sidebar, limit to 7) ---
                        scheduleList.innerHTML = '';
                        const seenBatchesSchedule = new Set();
                        let count = 0;

                        dashboardBatches.slice(0, 7).forEach(batch => {
                            const key = `${batch.id}_${batch.status}`;
                            if (seenBatchesSchedule.has(key)) return;
                            seenBatchesSchedule.add(key);
                            count++;

                            const statusLower = batch.status.toLowerCase();
                            const icon = statusLower.includes('scheduled') ? '⏳' : '🛠️';
                            const li = document.createElement('li');
                            li.classList.add(statusLower.includes('scheduled') ? 'notif-scheduled' : 'notif-in_progress');
                            li.innerHTML = `
                                    <span class="notif-text">${icon} ${batch.product_name} - ${batch.status}</span>
                                    <span class="timestamp">${batch.timestamp}</span>
                                `;
                            scheduleList.appendChild(li);
                            setTimeout(() => li.classList.add('show'), 50);
                        });


                        // --- Update notification feed ---
                        notifFeed.innerHTML = '';
                        const allNotifs = [];

                        // --- Always show Today header with View All button ---
                        let todayHeader = Array.from(notifFeed.querySelectorAll('.notif-header')).find(h => h.dataset.date === 'Today');
                        if (!todayHeader) {
                            todayHeader = document.createElement('li');
                            todayHeader.classList.add('notif-header');
                            todayHeader.dataset.date = 'Today';


                            const headerSpan = document.createElement('span');
                            headerSpan.textContent = 'Today';
                            todayHeader.appendChild(headerSpan);

                            const viewAllBtn = document.createElement('button');
                            viewAllBtn.textContent = 'View All';
                            viewAllBtn.classList.add('view-all-btn');
                            viewAllBtn.style.cssText = `
                                background: #ff4d4d;
                                color: #fff;
                                border: none;
                                border-radius: 5px;
                                padding: 2px 8px;
                                cursor: pointer;
                                font-size: 0.75rem;
                                margin-left: 10px;
                            `;
                            viewAllBtn.addEventListener('click', () => window.location.href = 'notification.html');
                            todayHeader.appendChild(viewAllBtn);

                            notifFeed.appendChild(todayHeader);
                        }

                        // --- Low stock notifications ---
                        const seenLowStock = new Set();
                        lowStockItems.forEach(item => {
                            if (!seenLowStock.has(item.name)) {
                                seenLowStock.add(item.name);
                                allNotifs.push({
                                    text: `⚠️ ${item.name} stock is low! (Available: ${item.quantity})`,
                                    timestamp: new Date().toISOString(),
                                    type: 'low-stock'
                                });
                            }
                        });

                        


                        // --- Production notifications (Started + Completed) ---
                        const latestBatchMap = new Map();
                        prodData.forEach(batch => {
                            const existing = latestBatchMap.get(batch.id);
                            if (!existing || new Date(batch.timestamp) > new Date(existing.timestamp)) {
                                latestBatchMap.set(batch.id, batch);
                            }
                        });

                        latestBatchMap.forEach(batch => {
                            const statusLower = batch.status.toLowerCase();
                            if (statusLower.includes('started') || statusLower.includes('completed')) {
                                let icon = '🛠️';
                                let statusText = 'Batch Started';
                                if (statusLower.includes('completed')) {
                                    icon = '✔️';
                                    statusText = 'Batch Completed';
                                }

                                allNotifs.push({
                                    text: `${icon} ${batch.product_name} - ${statusText} (${batch.timestamp})`,
                                    timestamp: batch.timestamp,
                                    type: statusLower.includes('started') ? 'in_progress' : 'completed',
                                    batchId: batch.id
                                });
                            }
                        });

                        // --- Sort and show latest 7 notifications ---
                        allNotifs.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));
                        const latestNotifs = allNotifs.slice(0, 7);

                        function formatDateHeader(ts) {
                            const notifDate = new Date(ts),
                                now = new Date();
                            const diffDays = Math.floor((now - notifDate) / (1000 * 60 * 60 * 24));
                            return diffDays === 0 ? 'Today' : diffDays === 1 ? 'Yesterday' : notifDate.toLocaleDateString();
                        }

                        let lowStockDividerAdded = false;

                        // Prepare the divider
                        let productionDivider = notifFeed.querySelector('.notif-divider.production-update');
                        if (!productionDivider) {
                            productionDivider = document.createElement('li');
                            productionDivider.classList.add('notif-divider', 'production-update');
                            productionDivider.style.textAlign = 'center';
                            productionDivider.style.color = '#888';
                            productionDivider.style.fontWeight = '600';
                            productionDivider.style.fontSize = '0.8rem';
                            productionDivider.style.padding = '5px 0';
                            productionDivider.textContent = 'Production Update';
                        }

                        // Loop through notifications
                        latestNotifs.forEach(n => {
                            const headerText = formatDateHeader(n.timestamp);
                            let header = Array.from(notifFeed.querySelectorAll('.notif-header')).find(h => h.dataset.date === headerText);

                            if (!header) {
                                header = document.createElement('li');
                                header.classList.add('notif-header');
                                header.dataset.date = headerText;

                                const headerSpan = document.createElement('span');
                                headerSpan.textContent = headerText;
                                header.appendChild(headerSpan);

                                if (headerText === 'Today') {
                                    const viewAllBtn = document.createElement('button');
                                    viewAllBtn.textContent = 'View All';
                                    viewAllBtn.classList.add('view-all-btn');
                                    viewAllBtn.style.cssText = `
                                    background: #ff4d4d;
                                    color: #fff;
                                    border: none;
                                    border-radius: 5px;
                                    padding: 2px 8px;
                                    cursor: pointer;
                                    font-size: 0.75rem;
                                    margin-left: 10px;
                                `;
                                    viewAllBtn.addEventListener('click', () => window.location.href = 'notification.html');
                                    header.appendChild(viewAllBtn);
                                }

                                notifFeed.appendChild(header);
                            }

                            const li = document.createElement('li');
                            li.dataset.batchId = n.batchId;
                            li.textContent = n.text;

                            if (n.type === 'low-stock') li.classList.add('low-stock');
                            else if (n.type === 'in_progress') li.classList.add('notif-in_progress');
                            else if (n.type === 'completed') li.classList.add('notif-completed');

                            if (!readNotifications.includes(n.text)) li.classList.add('new-notif');

                            if (n.type === 'low-stock') {
                                // Append low-stock directly
                                notifFeed.appendChild(li);
                            } else {
                                // Append divider if not yet added
                                if (!lowStockDividerAdded) {
                                    notifFeed.appendChild(productionDivider);
                                    lowStockDividerAdded = true;
                                }
                                notifFeed.appendChild(li);
                            }
                        });

                        // Always show divider even if no production notifications
                        if (!lowStockDividerAdded) notifFeed.appendChild(productionDivider);


                        // --- Update badge ---
                        totalUnread = notifFeed.querySelectorAll('li.new-notif').length;
                        if (totalUnread > 0) {
                            notifBadge.style.display = 'inline-block';
                            notifBadge.textContent = totalUnread > 99 ? '99+' : totalUnread;
                            notifBadge.classList.remove('pulse');
                            void notifBadge.offsetWidth;
                            notifBadge.classList.add('pulse');
                        } else {
                            notifBadge.style.display = 'none';
                        }

                    } catch (err) {
                        console.error('Error updating notifications:', err);
                    }
                }
                updateNotifications();
                setInterval(updateNotifications, 5000);

                // 🎯 Redirect button to production.php
                document.getElementById('viewProductionBtn').addEventListener('click', () => {
                    window.location.href = 'production.php';
                });
            });
        </script>
    </body>

    </html>